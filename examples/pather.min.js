var L=class{static Row(l,c,$,e){if($<e)return"";let t=e/2;return"\n      M".concat(l-t," ").concat(c-t,"\n      l").concat($-e," 0\n      a").concat(t," ").concat(t," 0 0 1 0 ").concat(e,"\n      l").concat(e-$," 0\n      a").concat(t," ").concat(t," 0 0 1 0 ").concat(-e,"\n    ")}};var Z=class{static Basic(l,c,$){return"\n      M".concat(l+$," ").concat(c,"\n      a").concat($," ").concat($," 0 1 0 ").concat(-$*2," 0\n      a").concat($," ").concat($," 0 1 0 ").concat($*2," 0\n    ")}};var x=class{static Basic(l,c,$,e,t,f){return"M".concat(l," ").concat(c," Q").concat(t," ").concat(f," ").concat($," ").concat(e)}static Multi(l,c){if(!l||l.length===1)return"";let $=l.length,e="M".concat(l[0][0]," ").concat(l[0][1]);for(let t=1;t<$-1;t++){let f=l[t][0],M=l[t][1],b=f-l[t-1][0],o=M-l[t-1][1],m=f-l[t+1][0],r=M-l[t+1][1],n=c/Math.sqrt(m*m+r*r);e+=" L".concat(f-b*n," ").concat(M-o*n," Q").concat(f," ").concat(M," ").concat(f-m*n," ").concat(M-r*n)}return e+="L".concat(l[$-1][0]," ").concat(l[$-1][1]),e}};var B=class{static Basic(l,c,$,e){return"M".concat(l," ").concat(c," L").concat($," ").concat(e)}static Fold(l){if(!l||l.length===1)return"";let c="M".concat(l[0][0]," ").concat(l[0][1]);for(let $=1;$<l.length;$++)c+=" L".concat(l[$][0]," ").concat(l[$][1]);return c}};var R=class{static Basic(l){let c=l.length;if(c<3)return"";let $="M".concat(l[0][0]," ").concat(l[0][1]);for(let e=0;e<c;e++)$+=" L".concat(l[e][0]," ").concat(l[e][1]);return $+=" Z",$}static Regular(l,c,$,e){let t=2*Math.PI/$,f="";for(let M=1;M<$;M++){let b=t*M;f+=" l".concat(e*Math.cos(b)," ").concat(e*Math.sin(b))}return"M".concat(l+e/2," ").concat(c," ").concat(f," Z")}};var I=class{static Basic(l,c,$,e){return"\n      M".concat(l-$/2," ").concat(c-e/2,"\n      l").concat($," 0\n      l0 ").concat(e,"\n      l").concat(-$," 0\n      Z\n    ")}static Round(l,c,$,e,t){return typeof t=="number"&&(t={tl:t,tr:t,br:t,bl:t}),t.tl||(t.tl=0),t.tr||(t.tr=0),t.bl||(t.bl=0),t.br||(t.br=0),"\n      M".concat(l-($-t.tl-t.tr)/2," ").concat(c-e/2,"\n      l").concat($-t.tr-t.tl," 0\n      a").concat(t.tr," ").concat(t.tr," 0 0 1 ").concat(t.tr," ").concat(t.tr,"\n      l0 ").concat(e-t.tr-t.br,"\n      a").concat(t.br," ").concat(t.br," 0 0 1 ").concat(-t.br," ").concat(t.br,"\n      l").concat(t.bl+t.br-$," 0\n      a").concat(t.bl," ").concat(t.bl," 0 0 1 ").concat(-t.bl," ").concat(-t.bl,"\n      l0 ").concat(t.tl+t.bl-e,"\n      a").concat(t.tl," ").concat(t.tl," 0 0 1 ").concat(t.tl," ").concat(-t.tl,"\n      Z\n    ")}static Diamond(l,c,$,e){let t=$/2,f=e/2;return"\n      M".concat(l-t," ").concat(c,"\n      l").concat(t," ").concat(f,"\n      l").concat(t," ").concat(-f,"\n      l").concat(-t," ").concat(-f,"\n      Z\n    ")}static Parallelogram(l,c,$,e,t){let f=($+Math.abs(t))/2;return"\n      M".concat(l-f," ").concat(c-e/2,"\n      l").concat($," 0\n      l").concat(t," ").concat(e,"\n      l").concat(-$," 0\n      Z\n    ")}};var P=class{static Basic(l,c,$){if(!$)return"";let e="M".concat(l," ").concat(c);for(let t of $)t[0]===0?l=t[1]:c=t[1],e+=" L".concat(l," ").concat(c);return e}static Round(l,c,$,e){if(!$)return"";let t=$.length,f="M".concat(l," ").concat(c),M=!1,b=0,o=0,m=!1;for(let r=0;r<t-1;r++){if(M=$[r][0]!==$[r+1][0],!M){$[r][0]===0&&(l=$[r][1]),$[r][0]===1&&(c=$[r][1]),f+=" L".concat(l," ").concat(c);continue}$[r][0]===0&&(l=$[r][1]>l?$[r][1]-e:$[r][1]+e,b=$[r][1],o=$[r+1][1]>c?c+e:c-e,m=$[r][1]>l==$[r+1][1]>c),$[r][0]===1&&(c=$[r][1]>c?$[r][1]-e:$[r][1]+e,o=$[r][1],b=$[r+1][1]>l?l+e:l-e,m=$[r][1]>c!=$[r+1][1]>l),f+=" L".concat(l," ").concat(c," A").concat(e," ").concat(e," 0 0 ").concat(m?1:0," ").concat(b," ").concat(o),l=b,c=o}return $[t-1][0]===0&&(l=$[t-1][1]),$[t-1][0]===1&&(c=$[t-1][1]),f+=" L".concat(l," ").concat(c),f}};var q=class{static Equilateral(l,c,$){let e=Math.sin(Math.PI/3)*$,t=$/2;return"\n      M".concat(l-t," ").concat(c+e/3,"\n      l").concat($," 0\n      l").concat(-t," ").concat(-e,"\n      Z\n    ")}static Isosceles(l,c,$,e){let t=$/2;return"\n      M".concat(l-t," ").concat(c+e/3,"\n      l").concat($," 0\n      l").concat(-t," ").concat(-e,"\n      Z\n    ")}};export{L as Capsule,Z as Circle,x as Curve,B as Line,R as Polygon,I as Rectangle,P as Step,q as Triangle};
